[{"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/bookings/index.js":"1","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/components/navbar/index.js":"2","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/index.js":"3","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/home/index.js":"4","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/payment/index.js":"5","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/App.js":"6","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/gallery/index.js":"7","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/components/app-content/index.js":"8","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/payment-portal/index.js":"9"},{"size":32363,"mtime":1614269238228,"results":"10","hashOfConfig":"11"},{"size":2889,"mtime":1614313503843,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1612791860679,"results":"13","hashOfConfig":"11"},{"size":30974,"mtime":1614314985365,"results":"14","hashOfConfig":"11"},{"size":4876,"mtime":1614269238296,"results":"15","hashOfConfig":"11"},{"size":1304,"mtime":1614311113650,"results":"16","hashOfConfig":"11"},{"size":21132,"mtime":1614269238256,"results":"17","hashOfConfig":"11"},{"size":94,"mtime":1614269238143,"results":"18","hashOfConfig":"11"},{"size":2534,"mtime":1614269238295,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1k6apu",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/bookings/index.js",["41","42","43","44","45"],"import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nimport { Link } from \"react-scroll\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Form from \"react-bootstrap/Form\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Calendar from \"react-calendar\";\n// import \"react-calendar/dist/Calendar.css\";\n\nimport emailjs from \"emailjs-com\";\n\ntoast.configure();\n\nexport default function Index() {\n  const [loading, setLoading] = React.useState(false);\n\n  const [value, onChange] = useState(new Date());\n\n  // Garden Checkbox State\n  const [gardenCheckState, setGardenCheckState] = useState({\n    lawnmow: false,\n    gardenLitter: false,\n    gardenCare: false,\n    weeding: false,\n    trimming: false,\n    sidewalkWeeding: false,\n    drivewayWeeding: false,\n  });\n\n  // Cleaning Checkbox State\n  const [cleaningCheckState, setCleaningCheckState] = useState({\n    dish_wash: false,\n    vacuum: false,\n    mop_sweep: false,\n    bins: false,\n    surface_clean: false,\n    mirror_clean: false,\n    oven_clean: false,\n    fridge_clean: false,\n    cupboard_clean: false,\n    organizing: false,\n    fold_clothes: false,\n    window_clean: false,\n  });\n\n  // useEffect(() => {\n  //   console.log(value);\n  // }, [value]);\n\n  useEffect(() => {\n    console.log(cleaningCheckState);\n  }, [cleaningCheckState]);\n\n  function sendGardeningEmail(e) {\n    e.preventDefault();\n    console.log(e.target, \"vbreou\");\n\n    emailjs\n      .sendForm(\n        \"gmail\",\n        \"template_ua349no\",\n        e.target,\n        // gardenCheckState,\n        \"user_9Sc8vdXTbOS9xDXaHCNvq\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          // loading done\n          // alert and scroll to top\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  }\n\n  function sendCleaningEmail(e) {\n    e.preventDefault();\n    console.log(e.target, \"vbreo1u\");\n\n    emailjs\n      .sendForm(\n        \"gmail\",\n        \"template_6j1arch\",\n        e.target,\n        // gardenCheckState,\n        \"user_9Sc8vdXTbOS9xDXaHCNvq\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          // loading done\n          // alert and scroll to top\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  }\n\n  return (\n    <div>\n      <div className=\"screen bookings-landing\" id=\"book-land\">\n        <div className=\"navbar-placeholder\" />\n        <div className=\"screen-container column\">\n          <div className=\"bookings-options-container\">\n            <div className=\"bookings-content\">\n              <Link\n                className=\"cleaning-panel\"\n                activeClass=\"active\"\n                to=\"book-clean\"\n                spy={true}\n                smooth={true}\n                hashSpy={true}\n                // offset={50}\n                duration={500}\n                // delay={1000}\n                isDynamic={true}\n                ignoreCancelEvents={false}\n              ></Link>\n              {/* <div className=\"gardening-panel\"></div> */}\n              <Link\n                className=\"gardening-panel\"\n                activeClass=\"active\"\n                to=\"book-gard\"\n                spy={true}\n                smooth={true}\n                hashSpy={true}\n                // offset={50}\n                duration={500}\n                // delay={1000}\n                isDynamic={true}\n                ignoreCancelEvents={false}\n              ></Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"screen bookings-cleaning\" id=\"book-clean\">\n        <div className=\"navbar-placeholder\" />\n        <div\n          className=\"screen-container row\"\n          style={{\n            // backgroundColor: \"red\",\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <div className=\"\" style={{ flex: 1 }}>\n            edf\n          </div> */}\n          <div\n            className=\"garden-form\"\n            style={{\n              margin: \"auto\",\n              // backgroundColor: \"yellow\",\n              alignItems: \"center\",\n              flex: 2,\n              order: 1,\n            }}\n          >\n            <div className=\"form-body\" style={{ opacity: 1 }}>\n              <Form\n                style={{\n                  display: \"flex\",\n                  flex: \"1\",\n                  width: \"80%\",\n                  margin: \"auto\",\n                  flexDirection: \"column\",\n                  color: \"#636c59\",\n                  fontWeight: \"bold\",\n                  textTransform: \"uppercase\",\n                  backgroundColor: \"#fff\",\n                  opacity: 0.95,\n                  padding: \"0 5rem 0 5rem\",\n                  border: \"0.3rem solid #636c59\",\n                  borderRadius: \"1rem\",\n                }}\n                onSubmit={sendCleaningEmail}\n              >\n                <Form.Group\n                  controlId=\"exampleForm.ControlInput10\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    justifyContent: \"center\",\n                    // backgroundColor: \"yellow\",\n                  }}\n                >\n                  <Form.Label\n                    style={{ marginRight: \"2rem\", marginTop: \"0.5rem\" }}\n                  >\n                    name\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name1\"\n                    // placeholder=\"David Keys\"\n                    style={{\n                      color: \"grey\",\n                      fontWeight: \"bold\",\n                      textTransform: \"uppercase\",\n                    }}\n                  />\n                </Form.Group>\n                <Form.Group\n                  controlId=\"exampleForm.ControlInput10\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"flex-start\",\n                    flex: 1,\n                    // backgroundColor: \"blue\",\n                    // borderBottom: \"1.5px solid #b6b6ad\",\n                  }}\n                >\n                  <Form.Label style={{ marginRight: \"2rem\" }}>email</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email1\"\n                    // placeholder=\"name@example.com\"\n                    style={{\n                      color: \"grey\",\n                      fontWeight: \"bold\",\n                      textTransform: \"uppercase\",\n                    }}\n                  />\n                </Form.Group>\n                <Form.Group\n                  controlId=\"exampleForm.ControlTextarea10\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"flex-start\",\n                    flex: 1,\n                  }}\n                >\n                  <Form.Label style={{ marginRight: \"2rem\" }}>notes</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    name=\"message1\"\n                    rows={3}\n                    // placeholder=\"Make your enquiry\"\n                    style={{\n                      color: \"grey\",\n                      fontWeight: \"bold\",\n                      textTransform: \"uppercase\",\n                    }}\n                  />\n                </Form.Group>\n                <Calendar onChange={onChange} value={value} />\n\n                <Form.Group\n                  controlId=\"exampleForm.ControlSelect10\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 8,\n                    // backgroundColor: \"red\",\n                    marginTop: \"1%\",\n                  }}\n                >\n                  <div\n                    style={{\n                      flexDirection: \"column\",\n                      // border: \"solid 1px #c3ccc3\",\n                      borderRadius: \"5px\",\n                      // padding: \"8px\",\n                      width: \"100%\",\n                    }}\n                  >\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          dish_wash: !cleaningCheckState[\"dish_wash\"],\n                        })\n                      }\n                      inline\n                      label=\"Dish Washing\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-101`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          vacuum: !cleaningCheckState[\"vacuum\"],\n                        })\n                      }\n                      inline\n                      label=\"Vacuumc Cleaning\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-102`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          mop_sweep: !cleaningCheckState[\"mop_sweep\"],\n                        })\n                      }\n                      inline\n                      // disabled\n                      label=\"Mopping & Sweeping\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-103`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          bins: !cleaningCheckState[\"bins\"],\n                        })\n                      }\n                      inline\n                      label=\"Emptying Bins\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-104`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          surface_clean: !cleaningCheckState[\"surface_clean\"],\n                        })\n                      }\n                      inline\n                      label=\"Surface Cleaning\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-105`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          mirror_clean: !cleaningCheckState[\"mirror_clean\"],\n                        })\n                      }\n                      inline\n                      label=\"Mirror Cleaning\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-106`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          oven_clean: !cleaningCheckState[\"oven_clean\"],\n                        })\n                      }\n                      inline\n                      label=\"Oven Cleaning\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-107`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          fridge_clean: !cleaningCheckState[\"fridge_clean\"],\n                        })\n                      }\n                      inline\n                      label=\"Fridge Cleaning\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-108`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          cupboard_clean: !cleaningCheckState[\"cupboard_clean\"],\n                        })\n                      }\n                      inline\n                      label=\"Cupboard Cleaning\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-109`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          organizing: !cleaningCheckState[\"organizing\"],\n                        })\n                      }\n                      inline\n                      label=\"Organizing\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-110`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          fold_clothes: !cleaningCheckState[\"fold_clothes\"],\n                        })\n                      }\n                      inline\n                      label=\"Folding Clothes\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-111`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setCleaningCheckState({\n                          ...cleaningCheckState,\n                          window_clean: !cleaningCheckState[\"window_clean\"],\n                        })\n                      }\n                      inline\n                      label=\"Window Clean\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-112`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                  </div>\n                </Form.Group>\n                <input\n                  name=\"dish_wash\"\n                  value={cleaningCheckState.dish_wash}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"vacuum\"\n                  value={cleaningCheckState.vacuum}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"mop_sweep\"\n                  value={cleaningCheckState.mop_sweep}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"bins\"\n                  value={cleaningCheckState.bins}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"surface_clean\"\n                  value={cleaningCheckState.surface_clean}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"mirror_clean\"\n                  value={cleaningCheckState.mirror_clean}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"oven_clean\"\n                  value={cleaningCheckState.oven_clean}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"fridge_clean\"\n                  value={cleaningCheckState.fridge_clean}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"cupboard_clean\"\n                  value={cleaningCheckState.cupboard_clean}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"organizing\"\n                  value={cleaningCheckState.organizing}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"fold_clothes\"\n                  value={cleaningCheckState.fold_clothes}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"window_clean\"\n                  value={cleaningCheckState.window_clean}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"clean_date\"\n                  value={JSON.stringify(value)}\n                  style={{ display: \"none\" }}\n                />\n\n                <div className=\"form-footer\">\n                  <div className=\"button-wrapper\">\n                    <div className=\"left-button\">\n                      <Link\n                        activeClass=\"active\"\n                        to=\"book-land\"\n                        spy={true}\n                        smooth={true}\n                        hashSpy={true}\n                        // offset={50}\n                        duration={500}\n                        // delay={1000}\n                        isDynamic={true}\n                        ignoreCancelEvents={true}\n                        style={{ width: \"80%\" }}\n                      >\n                        <button\n                          type=\"submit\"\n                          class=\"btn btn-primary\"\n                          style={{\n                            width: \"100%\",\n                            fontWeight: \"bold\",\n                            backgroundColor: \"transparent\",\n                            fontSize: 13,\n                            color: \"#636c59\",\n                            borderColor: \"#636c59\",\n                            borderWidth: \"2px\",\n                            borderRadius: \"0\",\n                          }}\n                        >\n                          BACK TO TOP\n                        </button>\n                      </Link>\n                    </div>\n\n                    <div className=\"right-button\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary\"\n                        style={{\n                          width: \"100%\",\n                          fontWeight: \"bold\",\n                          backgroundColor: \"#636c59\",\n                          color: \"#\",\n                          fontSize: 13,\n                          borderWidth: \"0px\",\n                          borderRadius: \"0\",\n                        }}\n                      >\n                        SUBMIT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n\n          {/* <div className=\"landing-right\" style={{ backgroundColor: \"yellow\" }}>\n            <div className=\"garden-info\"></div>\n          </div> */}\n        </div>\n      </div>\n\n      {/*  */}\n\n      <div className=\"screen bookings-gardening\" id=\"book-gard\">\n        <div className=\"navbar-placeholder\" />\n        <div\n          className=\"screen-container row\"\n          style={{\n            justifyContent: \"center\",\n          }}\n        >\n          {/* <div className=\"\" style={{ flex: 1 }}>\n            edf\n          </div> */}\n          <div\n            className=\"garden-form\"\n            style={{\n              margin: \"auto\",\n              alignItems: \"center\",\n              flex: 2,\n            }}\n          >\n            {/* <div className=\"form-header\">\n              <h1>GARDENING</h1>\n              <h5>SUBMIT YOUR ENQUIRY</h5>\n            </div> */}\n\n            <div className=\"form-body\" style={{ opacity: 1 }}>\n              <Form\n                style={{\n                  display: \"flex\",\n                  flex: \"1\",\n                  width: \"80%\",\n                  margin: \"auto\",\n                  flexDirection: \"column\",\n                  color: \"#636c59\",\n                  fontWeight: \"bold\",\n                  textTransform: \"uppercase\",\n                  backgroundColor: \"#fff\",\n                  opacity: 0.95,\n                  padding: \"0 5rem 0 5rem\",\n                  border: \"0.3rem solid #636c59\",\n                  borderRadius: \"1rem\",\n                }}\n                onSubmit={sendGardeningEmail}\n              >\n                <Form.Group\n                  controlId=\"exampleForm.ControlInput11\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Form.Label\n                    style={{ marginRight: \"2rem\", marginTop: \"0.5rem\" }}\n                  >\n                    name\n                  </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    // placeholder=\"David Keys\"\n                    style={{\n                      color: \"grey\",\n                      fontWeight: \"bold\",\n                      textTransform: \"uppercase\",\n                    }}\n                  />\n                </Form.Group>\n                <Form.Group\n                  controlId=\"exampleForm.ControlInput11\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"flex-start\",\n                    flex: 1,\n                  }}\n                >\n                  <Form.Label style={{ marginRight: \"2rem\" }}>email</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    // placeholder=\"name@example.com\"\n                    style={{\n                      color: \"grey\",\n                      fontWeight: \"bold\",\n                      textTransform: \"uppercase\",\n                    }}\n                  />\n                </Form.Group>\n                <Form.Group\n                  controlId=\"exampleForm.ControlTextarea11\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"flex-start\",\n                    flex: 1,\n                  }}\n                >\n                  <Form.Label style={{ marginRight: \"2rem\" }}>notes</Form.Label>\n                  <Form.Control\n                    as=\"textarea\"\n                    name=\"message\"\n                    rows={3}\n                    // placeholder=\"Make your enquiry\"\n                    style={{\n                      color: \"grey\",\n                      fontWeight: \"bold\",\n                      textTransform: \"uppercase\",\n                    }}\n                  />\n                </Form.Group>\n\n                <Calendar onChange={onChange} value={value} />\n\n                <Form.Group\n                  controlId=\"exampleForm.ControlSelect11\"\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 8,\n                    // backgroundColor: \"red\",\n                    marginTop: \"1%\",\n                  }}\n                >\n                  <div\n                    style={{\n                      flexDirection: \"column\",\n                      // border: \"solid 1px #c3ccc3\",\n                      borderRadius: \"5px\",\n                      padding: \"8px\",\n                      width: \"100%\",\n                    }}\n                  >\n                    <Form.Check\n                      onChange={() =>\n                        setGardenCheckState(\n                          // gardenCheckState['lawnmow'] = !gardenCheckState['lawnmow']\n                          {\n                            ...gardenCheckState,\n                            lawnmow: !gardenCheckState[\"lawnmow\"],\n                          }\n                        )\n                      }\n                      inline\n                      label=\"Lawn Mowing\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-111`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setGardenCheckState({\n                          ...gardenCheckState,\n                          gardenLitter: !gardenCheckState[\"gardenLitter\"],\n                        })\n                      }\n                      inline\n                      label=\"Garden Litter\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-112`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setGardenCheckState({\n                          ...gardenCheckState,\n                          gardenCare: !gardenCheckState[\"gardenCare\"],\n                        })\n                      }\n                      inline\n                      label=\"Garden Care\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-113`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n\n                    <Form.Check\n                      onChange={() =>\n                        setGardenCheckState({\n                          ...gardenCheckState,\n                          weeding: !gardenCheckState[\"weeding\"],\n                        })\n                      }\n                      inline\n                      label=\"Flower Bed / Plant Weeding\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-114`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setGardenCheckState({\n                          ...gardenCheckState,\n                          trimming: !gardenCheckState[\"trimming\"],\n                        })\n                      }\n                      inline\n                      label=\"Tree Branch / Bush Trimming\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-115`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setGardenCheckState({\n                          ...gardenCheckState,\n                          sidewalkWeeding: !gardenCheckState[\"sidewalkWeeding\"],\n                        })\n                      }\n                      inline\n                      label=\"Sidewalk Weed Removal\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-116`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                    <Form.Check\n                      onChange={() =>\n                        setGardenCheckState({\n                          ...gardenCheckState,\n                          drivewayWeeding: !gardenCheckState[\"drivewayWeeding\"],\n                        })\n                      }\n                      inline\n                      label=\"Driveway Weed Removal\"\n                      type={\"checkbox\"}\n                      id={`inline-${\"checkbox\"}-117`}\n                      style={{ color: \"grey\", fontSize: \"0.9rem\" }}\n                    />\n                  </div>\n                </Form.Group>\n\n                <input\n                  name=\"lawnmow\"\n                  value={gardenCheckState.lawnmow}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"gardenLitter\"\n                  value={gardenCheckState.gardenLitter}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"gardenCare\"\n                  value={gardenCheckState.gardenCare}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"weeding\"\n                  value={gardenCheckState.weeding}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"trimming\"\n                  value={gardenCheckState.trimming}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"sidewalkWeeding\"\n                  value={gardenCheckState.sidewalkWeeding}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"drivewayWeeding\"\n                  value={gardenCheckState.drivewayWeeding}\n                  style={{ display: \"none\" }}\n                />\n                <input\n                  name=\"garden_date\"\n                  value={JSON.stringify(value)}\n                  style={{ display: \"none\" }}\n                />\n                <div\n                  className=\"\"\n                  style={{\n                    display: \"flex\",\n                    flex: 1,\n                    margin: \"auto\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                ></div>\n                <div className=\"form-footer\">\n                  <div className=\"button-wrapper\">\n                    <div className=\"left-button\">\n                      <Link\n                        activeClass=\"active\"\n                        to=\"book-land\"\n                        spy={true}\n                        smooth={true}\n                        hashSpy={true}\n                        // offset={50}\n                        duration={500}\n                        // delay={1000}\n                        isDynamic={true}\n                        ignoreCancelEvents={true}\n                        style={{ width: \"80%\" }}\n                      >\n                        <button\n                          type=\"submit\"\n                          class=\"btn btn-primary\"\n                          style={{\n                            width: \"100%\",\n                            fontWeight: \"bold\",\n                            backgroundColor: \"transparent\",\n                            fontSize: 13,\n                            color: \"#636c59\",\n                            borderColor: \"#636c59\",\n                            borderWidth: \"2px\",\n                            borderRadius: \"0\",\n                          }}\n                        >\n                          BACK TO TOP\n                        </button>\n                      </Link>\n                    </div>\n\n                    <div className=\"right-button\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary\"\n                        style={{\n                          width: \"100%\",\n                          fontWeight: \"bold\",\n                          backgroundColor: \"#636c59\",\n                          color: \"#\",\n                          fontSize: 13,\n                          // borderColor: \"#000\",\n                          borderWidth: \"0px\",\n                          borderRadius: \"0\",\n                        }}\n                      >\n                        SUBMIT\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n          {/* <div className=\"\" style={{ flex: 1 }}>\n            edfw\n          </div> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n",["46","47"],"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/components/navbar/index.js",["48","49","50"],"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/index.js",[],"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/home/index.js",[],"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/payment/index.js",["51","52","53","54","55","56"],"import React, { useEffect, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./styles.css\";\n\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst Cryptr = require(\"cryptr\");\nconst cryptr = new Cryptr(\"myTotalySecretKey\");\n\nexport default function Payment() {\n  const [select, setSelect] = useState(0);\n  const [code, setCode] = useState(\"\");\n  const [quote, setQuote] = useState({});\n  const [priceData, setPriceData] = useState({});\n  const [url, setUrl] = useState(\"\");\n\n  useEffect(() => {\n    console.log(priceData);\n  }, [priceData]);\n  useEffect(() => {\n    console.log(code);\n  }, [code]);\n  useEffect(() => {\n    console.log(quote);\n    // typeof quote === \"object\" ? console.log(\"isObj\") : console.log(\"notObj\");\n  }, [quote]);\n\n  const handleInput = (e) => {\n    setCode(e.target.value);\n  };\n\n  function decrypt(code) {\n    const decryptedString = cryptr.decrypt(code);\n\n    console.log(\"dec\" + decryptedString);\n\n    setQuote(JSON.parse(decryptedString));\n  }\n\n  async function handleToken(token, product) {\n    // setLoading(true);\n    console.log(\"start\");\n    const response = await axios.post(\n      \"https://j3m2f.sse.codesandbox.io/checkout\",\n      {\n        token,\n        product,\n      }\n    );\n    const { status } = response.data;\n    if (status === \"success\") {\n      //   setLoading(false);\n      toast(\"Success! Check email for details\", { type: \"success\" });\n    } else {\n      //   setLoading(false);\n      toast(\"Something went wrong\", { type: \"error\" });\n    }\n  }\n\n  return (\n    <div className=\"payment-portal\">\n      <div className=\"navbar-placeholder\" />\n      <div className=\"screen-container column\">\n        <div\n          className=\"portal-form\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div\n            style={{ backgroundColor: \"red\", width: \"50vw\", height: \"50vh\" }}\n          >\n            <nav\n              style={{\n                backgroundColor: \"green\",\n                display: \"flex\",\n                justifyContent: \"space-around\",\n              }}\n            >\n              <button onClick={() => setSelect(0)}>Donation</button>\n              <button onClick={() => setSelect(1)}>Quote</button>\n            </nav>\n            <div\n              style={{\n                backgroundColor: \"yellow\",\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n              }}\n            >\n              {select == 0 && (\n                <div>\n                  <input placeholder=\"enter amount\" style={{ margin: \"5px\" }} />\n\n                  <StripeCheckout\n                    stripeKey=\"pk_test_51I6mKCDfXHQFQVOullPWJg7eYcVE87dBsMUsLNNWUz0h9JxVEGXgNpEwVhlkEwOxZx7c82ga81J6mxm53FWP2G2a00LjjoGjtb\"\n                    billingAddress\n                    shippingAddress\n                  />\n                </div>\n              )}\n\n              {select == 1 && (\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                  <div style={{ flex: 1, backgroundColor: \"purple\" }}>\n                    <h5>{quote.name || \"name\"}</h5>\n                    <h5>{quote.package || \"package\"}</h5>\n                    <h5>{quote.price || \"price\"}</h5>\n                  </div>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      backgroundColor: \"blue\",\n                      flex: 1,\n                    }}\n                  >\n                    <input\n                      placeholder=\"enter code\"\n                      style={{ margin: \"5px\", flex: 1 }}\n                      onChange={(e) => handleInput(e)}\n                    />\n\n                    <button style={{ flex: 1 }} onClick={() => decrypt(code)}>\n                      Get Price\n                    </button>\n\n                    <StripeCheckout\n                      stripeKey=\"pk_test_51I6mKCDfXHQFQVOullPWJg7eYcVE87dBsMUsLNNWUz0h9JxVEGXgNpEwVhlkEwOxZx7c82ga81J6mxm53FWP2G2a00LjjoGjtb\"\n                      token={(token) => {\n                        handleToken(token, quote);\n                      }}\n                      currency=\"GBP\"\n                      billingAddress\n                      shippingAddress\n                      amount={quote.price * 100}\n                      name={`${quote.name} - ${quote.package}`}\n                      style={{ flex: 1 }}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/App.js",[],"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/gallery/index.js",["57","58","59","60","61","62","63","64","65","66"],"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/components/app-content/index.js",["67"],"/Users/tsbmedia/Google Drive/tsb-media/github-workspace/coventry-fresh-home-web/src/pages/payment-portal/index.js",[],{"ruleId":"68","severity":1,"message":"69","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":15},{"ruleId":"68","severity":1,"message":"72","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":22},{"ruleId":"68","severity":1,"message":"73","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":13},{"ruleId":"68","severity":1,"message":"74","line":20,"column":10,"nodeType":"70","messageId":"71","endLine":20,"endColumn":17},{"ruleId":"68","severity":1,"message":"75","line":20,"column":19,"nodeType":"70","messageId":"71","endLine":20,"endColumn":29},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"68","severity":1,"message":"80","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":12},{"ruleId":"68","severity":1,"message":"81","line":10,"column":11,"nodeType":"70","messageId":"71","endLine":10,"endColumn":16},{"ruleId":"68","severity":1,"message":"82","line":10,"column":18,"nodeType":"70","messageId":"71","endLine":10,"endColumn":26},{"ruleId":"68","severity":1,"message":"83","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":12},{"ruleId":"68","severity":1,"message":"84","line":17,"column":21,"nodeType":"70","messageId":"71","endLine":17,"endColumn":33},{"ruleId":"68","severity":1,"message":"85","line":18,"column":10,"nodeType":"70","messageId":"71","endLine":18,"endColumn":13},{"ruleId":"68","severity":1,"message":"86","line":18,"column":15,"nodeType":"70","messageId":"71","endLine":18,"endColumn":21},{"ruleId":"87","severity":1,"message":"88","line":98,"column":23,"nodeType":"89","messageId":"90","endLine":98,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":110,"column":23,"nodeType":"89","messageId":"90","endLine":110,"endColumn":25},{"ruleId":"68","severity":1,"message":"91","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":19},{"ruleId":"68","severity":1,"message":"92","line":14,"column":8,"nodeType":"70","messageId":"71","endLine":14,"endColumn":19},{"ruleId":"68","severity":1,"message":"93","line":15,"column":8,"nodeType":"70","messageId":"71","endLine":15,"endColumn":19},{"ruleId":"68","severity":1,"message":"94","line":16,"column":8,"nodeType":"70","messageId":"71","endLine":16,"endColumn":19},{"ruleId":"68","severity":1,"message":"95","line":21,"column":8,"nodeType":"70","messageId":"71","endLine":21,"endColumn":20},{"ruleId":"68","severity":1,"message":"96","line":22,"column":8,"nodeType":"70","messageId":"71","endLine":22,"endColumn":20},{"ruleId":"68","severity":1,"message":"97","line":23,"column":8,"nodeType":"70","messageId":"71","endLine":23,"endColumn":20},{"ruleId":"68","severity":1,"message":"98","line":28,"column":8,"nodeType":"70","messageId":"71","endLine":28,"endColumn":19},{"ruleId":"68","severity":1,"message":"99","line":29,"column":8,"nodeType":"70","messageId":"71","endLine":29,"endColumn":19},{"ruleId":"68","severity":1,"message":"100","line":30,"column":8,"nodeType":"70","messageId":"71","endLine":30,"endColumn":19},{"ruleId":"68","severity":1,"message":"101","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":13},"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","'StripeCheckout' is defined but never used.","'axios' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'logo' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Form' is defined but never used.","'setPriceData' is assigned a value but never used.","'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'showcase_k1' is defined but never used.","'showcase_b1' is defined but never used.","'showcase_b2' is defined but never used.","'showcase_b3' is defined but never used.","'showcase_bd1' is defined but never used.","'showcase_bd2' is defined but never used.","'showcase_bd3' is defined but never used.","'showcase_g1' is defined but never used.","'showcase_g2' is defined but never used.","'showcase_g3' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]